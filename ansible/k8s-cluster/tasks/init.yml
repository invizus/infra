# This file should be only ran for control plane node.
# This will do `kubeadm init` and install cilium. Not needed for worker nodes.
---

- name: kubeadm init
#  ansible.builtin.command:
#    cmd: kubeadm init
  ansible.builtin.shell:
    cmd: kubeadm init
  become: yes
  environment:
    - NO_PROXY: "{{ NO_PROXY }}"
    - no_proxy: "{{ NO_PROXY }}"
    - "{{ proxy_env | default({}) }}"
  register: kubeadm_init_result
  tags: k8s, init

- name: Save kubeadm init stdout to file in /root/
  ansible.builtin.copy:
    content: "{{ kubeadm_init_result.stdout }}"
    dest: /root/kubeadm_init_output.txt
  when: kubeadm_init_result.stdout is defined
  tags: k8s, init

- name: create dir /root/.kube/
  ansible.builtin.file:
    path: /root/.kube/
    state: directory
  become: yes
  tags: k8s, init

- name: copy kubectl config to /root/.kube/
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: yes
  become: yes
  tags: k8s, init

- name: Get Cilium CLI version
  command: curl -s https://raw.githubusercontent.com/cilium/cilium-cli/main/stable.txt
  register: cilium_cli_version
  environment: "{{ proxy_env | default({}) }}"
  tags: k8s, init

- name: Download Cilium CLI
  ansible.builtin.get_url:
    url: "https://github.com/cilium/cilium-cli/releases/download/{{ cilium_cli_version.stdout }}/cilium-linux-amd64.tar.gz"
    dest: "/tmp/cilium.tar.gz"
  environment: "{{ proxy_env | default({}) }}"
  when: cilium_cli_version.stdout
  tags: k8s, init

- name: Extract Cilium CLI
  ansible.builtin.unarchive:
    src: "/tmp/cilium.tar.gz"
    dest: "/usr/local/bin"
    remote_src: yes
  become: yes
  tags: k8s, init

- name: Get Cilium CNI version
  command: curl -s https://raw.githubusercontent.com/cilium/cilium/main/stable.txt
  register: cilium_cni_version
  environment: "{{ proxy_env | default({}) }}"
  tags: k8s, init

- name: install cilium
  ansible.builtin.command:
    cmd: "cilium install --version {{ cilium_cni_version.stdout }}"
  environment: 
    - NO_PROXY: "{{ NO_PROXY }}"
    - no_proxy: "{{ NO_PROXY }}"
    - "{{ proxy_env | default({}) }}"
  when: cilium_cli_version.stdout
  become: yes
  tags: k8s, init

